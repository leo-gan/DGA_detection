[tool.poetry]
name = "DGA_anomaly_detection"
version = "0.1"
description = "Detection of DGA anomalies."
authors = ["Leonid Ganeline"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
pandas = "^1.4"
numpy = "~1.22"
scikit-learn = "==1.1.1"
joblib = "^1.0.1"
click = "~8.1.2"
pydantic = "^1.10"
tldextract = "^3.3.0"


[tool.poetry.dev-dependencies]
pytest = "~7.1"
pytest_mock = "~3.8"
pytest-cov = "~3.0"
PyYAML = "~6.0"
pre-commit = "^2.20"
pytest-profiling = "^1.7"
mypy = "^0.961"
black = "^22.6"
isort = "^5.9"
pycodestyle = "^2.9"
google-cloud-bigquery = "^2.34"
ipykernel = "^6.7"
pyarrow = "^9.0"
protobuf = "^4.21.4"
trustme = "^0.9.0"
responses = "^0.21"
types-requests = "^2.28"
pydantic-factories = "^1.6.0"


[tool.isort]
profile = "black"
multi_line_output = 3
skip = [".bz", ".banzai","venv"]

[tool.black]
line-length = 120

[tool.pytest.ini_options]
log_level = "DEBUG"
log_format = "%(asctime)s : %(levelname)s : %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
plugins = [
  "pydantic.mypy"
]
